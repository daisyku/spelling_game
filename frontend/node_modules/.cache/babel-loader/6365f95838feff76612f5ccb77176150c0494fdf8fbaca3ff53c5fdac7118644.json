{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Desktop/spell_game/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// Filename - App.js\n\n// Importing modules\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction scoring(word) {\n  if (word.length == 4) {\n    return 1;\n  }\n  return word.length;\n}\nfunction App() {\n  _s();\n  const [letters, setLetters] = useState([]); // State to store the letters\n  const [correctInputs, setCorrectInputs] = useState([]); // State to store the correct inputs\n  const [lst, setLst] = useState([]); // State to store the special inputs\n  const [userInput, setUserInput] = useState(''); // State to store the user's input\n  //const [guess, setGuess] = useState(''); // State to store the current guess\n  //const [alreadyGuessed, setAlreadyGuessed] = useState([]); // State to store the already guessed words\n  const [points, setPoints] = useState(0); // State to store the points\n  const [special_letter, setSpecialLetter] = useState('');\n  let alreadyGuessed = [];\n  const fetchGameState = () => {\n    fetch('/game_state').then(response => response.json()).then(data => {\n      setLetters(data.letters);\n      setCorrectInputs(data.correct_inputs);\n      setLst(data.lst);\n      setSpecialLetter(data.special_letter);\n      setUserInput('');\n      console.log('Special letter: ', data.special_letter);\n      console.log('pangrams: ', data.lst);\n    });\n    setPoints(0);\n    alreadyGuessed = [];\n  };\n\n  // Fetch the letters from the server when the component mounts\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n  const handleButtonClick = letter => {\n    setUserInput(userInput + letter);\n    const newUserInput = userInput + letter;\n    console.log('userintput is:', newUserInput);\n    setUserInput(newUserInput);\n  };\n\n  // Function to handle delete button click\n  const handleDeleteClick = () => {\n    setUserInput(userInput.slice(0, -1));\n  };\n  const handleGuessSubmission = () => {\n    //setGuess(userInput);\n    console.log('submitting guess: ', userInput);\n    //console.log('guess is: ', guess)\n    if (correctInputs.includes(userInput) && userInput.includes(special_letter)) {\n      if (alreadyGuessed.includes(userInput)) {\n        alert(\"Already Guessed\");\n      } else if (lst.includes(userInput)) {\n        alert(\"its a pangram!!!\");\n        var current = scoring(userInput);\n        setPoints(points + current);\n        alreadyGuessed.push(userInput);\n        console.log(\"already guessed: \", alreadyGuessed);\n      } else {\n        alert(\"Great!\");\n        current = scoring(userInput);\n        setPoints(points + current);\n        alreadyGuessed.push(userInput);\n        console.log(\"already guessed: \", alreadyGuessed);\n      }\n    } else {\n      alert(\"Not a valid word!\");\n    }\n    setUserInput('');\n    //setGuess('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spelling Bee!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[0]),\n        children: letters[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[1]),\n        children: letters[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[2]),\n        children: letters[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[3]),\n        children: letters[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[4]),\n        children: letters[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[5]),\n        children: letters[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(letters[6]),\n        children: letters[6]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGameState,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuessSubmission,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Guess: \", userInput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points: \", points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already Guessed: \", alreadyGuessed.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"dOPB50IXx54Qa0r0fJ/G7m8XYXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","scoring","word","length","App","_s","letters","setLetters","correctInputs","setCorrectInputs","lst","setLst","userInput","setUserInput","points","setPoints","special_letter","setSpecialLetter","alreadyGuessed","fetchGameState","fetch","then","response","json","data","correct_inputs","console","log","handleButtonClick","letter","newUserInput","handleDeleteClick","slice","handleGuessSubmission","includes","alert","current","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","join","_c","$RefreshReg$"],"sources":["/Users/lauren/Desktop/spell_game/frontend/src/App.js"],"sourcesContent":["// Filename - App.js\n\n// Importing modules\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction scoring(word) {\n  if (word.length == 4 ) {\n    return 1\n  }\n  return word.length\n}\n\nfunction App() {\n\n\n  const [letters, setLetters] = useState([]); // State to store the letters\n  const [correctInputs, setCorrectInputs] = useState([]); // State to store the correct inputs\n  const [lst, setLst] = useState([]); // State to store the special inputs\n  const [userInput, setUserInput] = useState(''); // State to store the user's input\n  //const [guess, setGuess] = useState(''); // State to store the current guess\n  //const [alreadyGuessed, setAlreadyGuessed] = useState([]); // State to store the already guessed words\n  const [points, setPoints] = useState(0); // State to store the points\n  const [special_letter, setSpecialLetter] = useState('')\n  let alreadyGuessed = []\n  \n  const fetchGameState = () => {\n    fetch('/game_state')\n      .then(response => response.json())\n      .then(data => {\n        setLetters(data.letters);\n        setCorrectInputs(data.correct_inputs);\n        setLst(data.lst);\n        setSpecialLetter(data.special_letter)\n        setUserInput('')\n        console.log('Special letter: ', data.special_letter);\n        console.log('pangrams: ', data.lst);\n\n      });\n    setPoints(0)\n    alreadyGuessed = []\n  };\n\n  // Fetch the letters from the server when the component mounts\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n\n  const handleButtonClick = (letter) => {\n    setUserInput(userInput + letter)\n    const newUserInput = userInput + letter;\n    console.log('userintput is:', newUserInput);\n    setUserInput(newUserInput);\n  };\n\n  // Function to handle delete button click\n  const handleDeleteClick = () => {\n    setUserInput(userInput.slice(0, -1));\n  };\n\n  const handleGuessSubmission = () => {\n   //setGuess(userInput);\n    console.log('submitting guess: ', userInput)\n    //console.log('guess is: ', guess)\n    if (correctInputs.includes(userInput) &&  userInput.includes(special_letter) ) {\n      if (alreadyGuessed.includes(userInput) ) {\n        alert(\"Already Guessed\");\n      } else if (lst.includes(userInput)){\n        alert(\"its a pangram!!!\");\n        var current = scoring(userInput)\n        setPoints(points+current)\n        alreadyGuessed.push(userInput)\n        console.log(\"already guessed: \" , alreadyGuessed )\n      }\n      else {\n        alert(\"Great!\");\n        current = scoring(userInput)\n        setPoints(points+current)\n        alreadyGuessed.push(userInput)\n        console.log(\"already guessed: \" , alreadyGuessed )\n      }\n    } else {\n      alert(\"Not a valid word!\");\n    }\n    setUserInput('');\n    //setGuess('');\n  };\n\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Spelling Bee!!</h1>\n\t\t\t\t{/* Calling a data from setdata for showing */}\n\t\t\t\t{/* <p>{data.name}</p>\n\t\t\t\t<p>{data.age}</p>\n\t\t\t\t<p>{data.date}</p>\n\t\t\t\t<p>{data.programming}</p> */}\n        {/* {letters.map((letter) => (\n          <button key={letter}>{letter}</button>\n        ))} */}\n        \n        <button onClick={() => handleButtonClick(letters[0])}>{letters[0]}</button>\n        <button onClick={() => handleButtonClick(letters[1])}>{letters[1]}</button>\n        <button onClick={() => handleButtonClick(letters[2])}>{letters[2]}</button>\n        <button onClick={() => handleButtonClick(letters[3])}>{letters[3]}</button>\n        <button onClick={() => handleButtonClick(letters[4])}>{letters[4]}</button>\n        <button onClick={() => handleButtonClick(letters[5])}>{letters[5]}</button>\n        <button onClick={() => handleButtonClick(letters[6])}>{letters[6]}</button>\n        <button onClick={fetchGameState}>New Game</button>\n        <p>{userInput}</p>\n        <button onClick={handleDeleteClick}>Delete</button>\n        <button onClick={handleGuessSubmission}>Submit Guess</button>\n        <p>Current Guess: {userInput}</p>\n        <p>Points: {points}</p>\n        <p>Already Guessed: {alreadyGuessed.join(', ')}</p>\n\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}