{"ast":null,"code":"var _jsxFileName = \"/Users/lauren/Desktop/spell_game/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// Filename - App.js\n\n// Importing modules\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction scoring(word) {\n  if (word.length == 4) {\n    return 1;\n  }\n  return word.length;\n}\nfunction totalPoints(lst) {\n  var points = 0;\n  for (var i = 0; i < lst.length; i++) {\n    points += scoring(lst[i]);\n  }\n  return points;\n}\nfunction App() {\n  _s();\n  const [letters, setLetters] = useState([]); // State to store the letters\n  const [correctInputs, setCorrectInputs] = useState([]); // State to store the correct inputs\n  const [lst, setLst] = useState([]); // State to store the special inputs\n  const [userInput, setUserInput] = useState(''); // State to store the user's input\n  const [alreadyGuessed, setAlreadyGuessed] = useState([]); // State to store the already guessed words\n  const [points, setPoints] = useState(0); // State to store the points\n  const [special_letter, setSpecialLetter] = useState('');\n  const [maxPoints, setMaxPoints] = useState(0);\n  const [inputColor, setInputColor] = useState('black');\n  const fetchGameState = () => {\n    fetch('/game_state').then(response => response.json()).then(data => {\n      setLetters(data.letters);\n      setCorrectInputs(data.correct_inputs);\n      setLst(data.lst);\n      setSpecialLetter(data.special_letter);\n      setUserInput('');\n      console.log('Special letter: ', data.special_letter);\n      console.log('pangrams: ', data.lst);\n    });\n    setPoints(0);\n    setAlreadyGuessed([]);\n    setMaxPoints(totalPoints(correctInputs));\n    console.log('max points: ', maxPoints);\n  };\n\n  // Fetch the letters from the server when the component mounts\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n  const handleButtonClick = letter => {\n    setUserInput(userInput + letter);\n    const newUserInput = userInput + letter;\n    //console.log('userintput is:', newUserInput);\n    setUserInput(newUserInput);\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      // Check if the key is a letter\n      if (event.key.length === 1 && event.key.match(/[a-z]/i)) {\n        // Update the userInput state\n        setUserInput(userInput + event.key);\n      } else if (event.key === 'Enter') {\n        handleGuessSubmission();\n      } else if (event.key === 'Backspace') {\n        handleDeleteClick();\n      }\n    };\n\n    // Add the event listener\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [userInput]); // Re-run the effect when `userInput` changes\n\n  const handleIncorrectLetter = event => {\n    const newInput = event.target.value;\n    const lastChar = newInput[newInput.length - 1];\n    if (letters.includes(lastChar)) {\n      setInputColor('green');\n    } else {\n      setInputColor('gray');\n    }\n    setUserInput(newInput);\n  };\n  // Function to handle delete button click\n  const handleDeleteClick = () => {\n    setUserInput(userInput.slice(0, -1));\n  };\n  const handleGuessSubmission = () => {\n    console.log('handling guess: ', userInput);\n    console.log('already guessed is: ', alreadyGuessed);\n    if (correctInputs.includes(userInput) && userInput.includes(special_letter)) {\n      if (alreadyGuessed.includes(userInput)) {\n        alert(\"Already Guessed\");\n      } else if (lst.includes(userInput)) {\n        alert(\"its a pangram!!!\");\n        var current = scoring(userInput);\n        setPoints(points + current);\n        setAlreadyGuessed([...alreadyGuessed, userInput]);\n      } else {\n        alert(\"Great!\");\n        current = scoring(userInput);\n        setPoints(points + current);\n        setAlreadyGuessed([...alreadyGuessed, userInput]);\n      }\n    } else {\n      alert(\"Not a valid word!\");\n    }\n    setUserInput('');\n    // Update the state variable with the new guess\n  };\n  const handleShuffle = () => {\n    let shuffledLetters = [...letters];\n    for (let i = shuffledLetters.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledLetters[i], shuffledLetters[j]] = [shuffledLetters[j], shuffledLetters[i]];\n    }\n    setLetters(shuffledLetters); // This will trigger a re-render\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spelling Bee!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[0] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[0]),\n          children: letters[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[1] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[1]),\n          children: letters[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[2] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[2]),\n          children: letters[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[3] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[3]),\n          children: letters[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[4] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[4]),\n          children: letters[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[5] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[5]),\n          children: letters[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: letters[6] === special_letter ? \"specialButton\" : \"myButton\",\n          onClick: () => handleButtonClick(letters[6]),\n          children: letters[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          background: 'transparent',\n          border: 'none',\n          borderBottom: '1px solid #000',\n          outline: 'none'\n        },\n        type: \"text\",\n        value: userInput,\n        onChange: handleIncorrectLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuessSubmission,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points: \", points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already Guessed: \", alreadyGuessed.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Points: \", maxPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGameState,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"AYpErOQ0c3cAcDAxdrYNAvvewHA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","scoring","word","length","totalPoints","lst","points","i","App","_s","letters","setLetters","correctInputs","setCorrectInputs","setLst","userInput","setUserInput","alreadyGuessed","setAlreadyGuessed","setPoints","special_letter","setSpecialLetter","maxPoints","setMaxPoints","inputColor","setInputColor","fetchGameState","fetch","then","response","json","data","correct_inputs","console","log","handleButtonClick","letter","newUserInput","handleKeyDown","event","key","match","handleGuessSubmission","handleDeleteClick","window","addEventListener","removeEventListener","handleIncorrectLetter","newInput","target","value","lastChar","includes","slice","alert","current","handleShuffle","shuffledLetters","j","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","onClick","background","border","borderBottom","outline","type","onChange","join","_c","$RefreshReg$"],"sources":["/Users/lauren/Desktop/spell_game/frontend/src/App.js"],"sourcesContent":["// Filename - App.js\n\n// Importing modules\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction scoring(word) {\n  if (word.length == 4 ) {\n    return 1\n  }\n  return word.length\n}\n\nfunction totalPoints (lst) {\n  var points = 0\n  for ( var i = 0; i < lst.length ; i++ ) {\n    points += scoring(lst[i])\n  }\n  return points\n}\n\nfunction App() {\n\n\n  const [letters, setLetters] = useState([]); // State to store the letters\n  const [correctInputs, setCorrectInputs] = useState([]); // State to store the correct inputs\n  const [lst, setLst] = useState([]); // State to store the special inputs\n  const [userInput, setUserInput] = useState(''); // State to store the user's input\n  const [alreadyGuessed, setAlreadyGuessed] = useState([]); // State to store the already guessed words\n  const [points, setPoints] = useState(0); // State to store the points\n  const [special_letter, setSpecialLetter] = useState('')\n  const [maxPoints, setMaxPoints] = useState(0)\n  const [inputColor, setInputColor] = useState('black');\n\n\n  const fetchGameState = () => {\n    fetch('/game_state')\n      .then(response => response.json())\n      .then(data => {\n        setLetters(data.letters);\n        setCorrectInputs(data.correct_inputs);\n        setLst(data.lst);\n        setSpecialLetter(data.special_letter)\n        setUserInput('')\n        console.log('Special letter: ', data.special_letter);\n        console.log('pangrams: ', data.lst);\n\n      });\n    setPoints(0)\n    setAlreadyGuessed([])\n    setMaxPoints(totalPoints(correctInputs))\n    console.log('max points: ', maxPoints)\n  };\n\n  // Fetch the letters from the server when the component mounts\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n\n  const handleButtonClick = (letter) => {\n    setUserInput(userInput + letter)\n    const newUserInput = userInput + letter;\n    //console.log('userintput is:', newUserInput);\n    setUserInput(newUserInput);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Check if the key is a letter\n      if (event.key.length === 1 && event.key.match(/[a-z]/i)) {\n        // Update the userInput state\n        setUserInput(userInput + event.key);\n      }\n\n      else if (event.key === 'Enter') {\n        handleGuessSubmission()\n      }\n      \n      else if (event.key === 'Backspace') {\n        handleDeleteClick()\n      }\n    };\n\n    // Add the event listener\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [userInput]); // Re-run the effect when `userInput` changes\n\n  const handleIncorrectLetter = (event) => {\n    const newInput = event.target.value;\n    const lastChar = newInput[newInput.length - 1];\n\n    if (letters.includes(lastChar)) {\n        setInputColor('green');\n    } else {\n        setInputColor('gray');\n    }\n\n    setUserInput(newInput);\n};\n  // Function to handle delete button click\n  const handleDeleteClick = () => {\n    setUserInput(userInput.slice(0, -1));\n  };\n\n  const handleGuessSubmission = () => {\n    console.log('handling guess: ', userInput)\n    console.log('already guessed is: ', alreadyGuessed)\n    if (correctInputs.includes(userInput) &&  userInput.includes(special_letter) ) {\n      if (alreadyGuessed.includes(userInput) ) {\n        alert(\"Already Guessed\");\n      } else if (lst.includes(userInput)){\n        alert(\"its a pangram!!!\");\n        var current = scoring(userInput)\n        setPoints(points+current)\n        setAlreadyGuessed([...alreadyGuessed, userInput]);\n      }\n      else {\n        alert(\"Great!\");\n        current = scoring(userInput)\n        setPoints(points+current)\n        setAlreadyGuessed([...alreadyGuessed, userInput]);\n      }\n    } else {\n      alert(\"Not a valid word!\");\n    }\n    setUserInput('');\n    // Update the state variable with the new guess\n  };\n\n  const handleShuffle = () => {\n    let shuffledLetters = [...letters];\n    for (let i = shuffledLetters.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffledLetters[i], shuffledLetters[j]] = [shuffledLetters[j], shuffledLetters[i]];\n    }\n    setLetters(shuffledLetters); // This will trigger a re-render\n  };\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Spelling Bee!!</h1>\n        \n        <div style={{display: 'flex', justifyContent: 'space-around'}}>\n        <button className={letters[0] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[0])}>{letters[0]}</button>\n        <button className={letters[1] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[1])}>{letters[1]}</button>\n        <button className={letters[2] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[2])}>{letters[2]}</button>\n        <button className={letters[3] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[3])}>{letters[3]}</button>\n        <button className={letters[4] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[4])}>{letters[4]}</button>\n        <button className={letters[5] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[5])}>{letters[5]}</button>\n        <button className={letters[6] === special_letter ? \"specialButton\" : \"myButton\"} onClick={() => handleButtonClick(letters[6])}>{letters[6]}</button>\n        </div>\n\n        {/* <p>{userInput}</p> */}\n        <input \n          style={{\n          background: 'transparent', \n          border: 'none', \n          borderBottom: '1px solid #000', \n          outline: 'none'\n          }} \n          type=\"text\" \n          value={userInput} \n          onChange={handleIncorrectLetter} \n\n        />\n\n        <button onClick={handleDeleteClick}>Delete</button>\n        <button onClick={handleGuessSubmission}>Submit Guess</button>\n        <button onClick={handleShuffle}>Shuffle</button>\n\n\n        <p>Points: {points}</p>\n        <p>Already Guessed: {alreadyGuessed.join(', ')}</p>\n        <p>Max Points: {maxPoints}</p>\n        <button onClick={fetchGameState}>New Game</button>\n\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}